embed-server --server-config=standalone.xml

try
        module add --name=org.postgres --resources=drivers/postgresql.jar --dependencies=javax.api,javax.transaction.api
catch
        echo "PostgreSQL module exists"
end-try

if (outcome != success) of /subsystem=datasources/jdbc-driver=postgres:read-resource
        /subsystem=datasources/jdbc-driver=postgres:add(driver-name=postgres,driver-module-name=org.postgres,driver-xa-datasource-class-name=org.postgresql.xa.PGXADataSource)
end-if

if (outcome == success) of /subsystem=datasources/xa-data-source=jBPMXADS:read-resource
        /subsystem=datasources/xa-data-source=jBPMXADS:remove
end-if

xa-data-source add --name=jBPMXADS --jndi-name="java:jboss/datasources/jBPMDS" --driver-name=postgres --user-name=usrjbpm --password=usrjbpm --xa-datasource-class=org.postgresql.xa.PGXADataSource --xa-datasource-properties=[ServerName=10.216.175.135, PortNumber=5432, DatabaseName=cvp] --background-validation=true --background-validation-millis=120000 --exception-sorter-class-name=org.jboss.jca.adapters.jdbc.extensions.postgres.PostgreSQLExceptionSorter --valid-connection-checker-class-name=org.jboss.jca.adapters.jdbc.extensions.postgres.PostgreSQLValidConnectionChecker --validate-on-match=true

if (outcome != success) of /system-property=org.kie.server.persistence.ds:read-resource
        /system-property=org.kie.server.persistence.ds:add(value="java:jboss/datasources/jBPMDS")
else
    /system-property=org.kie.server.persistence.ds:write-attribute(name=value,value="java:jboss/datasources/jBPMDS")
end-if

if (outcome != success) of /system-property=org.kie.server.persistence.dialect:read-resource
        /system-property=org.kie.server.persistence.dialect:add(value="org.hibernate.dialect.PostgreSQLDialect")
else
    /system-property=org.kie.server.persistence.dialect:write-attribute(name=value,value="org.hibernate.dialect.PostgreSQLDialect")
end-if

if (outcome != success) of /system-property=org.kie.server.persistence.schema:read-resource
        /system-property=org.kie.server.persistence.schema:add(value="public")
else
    /system-property=org.kie.server.persistence.schema:write-attribute(name=value,value="public")
end-if


#/subsystem=undertow/configuration=filter/response-header=Access-Control-Allow-Origin:add(header-name="Access-Control-Allow-Origin", header-value="*")
#/subsystem=undertow/server=default-server/host=default-host/filter-ref=Access-Control-Allow-Origin/:add()
#/subsystem=undertow/configuration=filter/response-header=Access-Control-Allow-Methods:add(header-name="Access-Control-Allow-Methods",header-value="GET,POST, OPTIONS, PUT, DELETE")
#/subsystem=undertow/server=default-server/host=default-host/filter-ref=Access-Control-Allow-Methods/:add()
#/subsystem=undertow/configuration=filter/response-header=Access-Control-Allow-Headers:add(header-name="Access-Control-Allow-Headers",header-value="accept, authorization,content-type, x-requested-with")
#/subsystem=undertow/server=default-server/host=default-host/filter-ref=Access-Control-Allow-Headers/:add()
#/subsystem=undertow/configuration=filter/response-header=Access-Control-Allow-Credentials:add(header-name="Access-Control-Allow-Credentials", header-value="true")
#/subsystem=undertow/server=default-server/host=default-host/filter-ref=Access-Control-Allow-Credentials/:add()
#/subsystem=undertow/configuration=filter/response-header=Access-Control-Max-Age:add(header-name="Access-Control-Max-Age",header-value="2")
#/subsystem=undertow/server=default-server/host=default-host/filter-ref=Access-Control-Max-Age/:add()

stop-embedded-server
